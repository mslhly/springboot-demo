<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msl.mybatis.mapper.YpServiceofficeApplyMapper">
  <resultMap id="BaseResultMap" type="com.msl.mybatis.entity.YpServiceofficeApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uuid" jdbcType="INTEGER" property="uuid" />
    <result column="apply_user_id" jdbcType="BIGINT" property="applyUserId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="agreement" jdbcType="VARCHAR" property="agreement" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="audit_person" jdbcType="VARCHAR" property="auditPerson" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="mark" jdbcType="VARCHAR" property="mark" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="has_amount" jdbcType="INTEGER" property="hasAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    uuid, apply_user_id, login_name, agreement, audit_status, audit_person, audit_time, 
    mark, amount, has_amount, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.msl.mybatis.entity.YpServiceofficeApplyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yp_serviceoffice_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from yp_serviceoffice_apply
    where uuid = #{uuid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yp_serviceoffice_apply
    where uuid = #{uuid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.msl.mybatis.entity.YpServiceofficeApplyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yp_serviceoffice_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.msl.mybatis.entity.YpServiceofficeApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yp_serviceoffice_apply (uuid, apply_user_id, login_name, 
      agreement, audit_status, audit_person, 
      audit_time, mark, amount, 
      has_amount, create_time, update_time
      )
    values (#{uuid,jdbcType=INTEGER}, #{applyUserId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, 
      #{agreement,jdbcType=VARCHAR}, #{auditStatus,jdbcType=INTEGER}, #{auditPerson,jdbcType=VARCHAR}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{mark,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, 
      #{hasAmount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.msl.mybatis.entity.YpServiceofficeApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yp_serviceoffice_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="applyUserId != null">
        apply_user_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="agreement != null">
        agreement,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditPerson != null">
        audit_person,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="hasAmount != null">
        has_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=INTEGER},
      </if>
      <if test="applyUserId != null">
        #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="agreement != null">
        #{agreement,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditPerson != null">
        #{auditPerson,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="hasAmount != null">
        #{hasAmount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.msl.mybatis.entity.YpServiceofficeApplyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from yp_serviceoffice_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_serviceoffice_apply
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=INTEGER},
      </if>
      <if test="record.applyUserId != null">
        apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.agreement != null">
        agreement = #{record.agreement,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.auditPerson != null">
        audit_person = #{record.auditPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.hasAmount != null">
        has_amount = #{record.hasAmount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_serviceoffice_apply
    set uuid = #{record.uuid,jdbcType=INTEGER},
      apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      agreement = #{record.agreement,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=INTEGER},
      audit_person = #{record.auditPerson,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      mark = #{record.mark,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=BIGINT},
      has_amount = #{record.hasAmount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.msl.mybatis.entity.YpServiceofficeApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_serviceoffice_apply
    <set>
      <if test="applyUserId != null">
        apply_user_id = #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="agreement != null">
        agreement = #{agreement,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditPerson != null">
        audit_person = #{auditPerson,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="hasAmount != null">
        has_amount = #{hasAmount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.msl.mybatis.entity.YpServiceofficeApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_serviceoffice_apply
    set apply_user_id = #{applyUserId,jdbcType=BIGINT},
      login_name = #{loginName,jdbcType=VARCHAR},
      agreement = #{agreement,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      audit_person = #{auditPerson,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      mark = #{mark,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=BIGINT},
      has_amount = #{hasAmount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=INTEGER}
  </update>
</mapper>