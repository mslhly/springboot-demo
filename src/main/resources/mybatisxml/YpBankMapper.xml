<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msl.mybatis.mapper.YpBankMapper">
  <resultMap id="BaseResultMap" type="com.msl.mybatis.entity.YpBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_pic" jdbcType="VARCHAR" property="bankPic" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="bank_background" jdbcType="VARCHAR" property="bankBackground" />
    <result column="background_pictrue" jdbcType="VARCHAR" property="backgroundPictrue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bank_id, bank_name, bank_pic, bank_code, bank_background, background_pictrue
  </sql>
  <select id="selectByExample" parameterType="com.msl.mybatis.entity.YpBankExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yp_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from yp_bank
    where bank_id = #{bankId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yp_bank
    where bank_id = #{bankId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.msl.mybatis.entity.YpBankExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yp_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.msl.mybatis.entity.YpBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yp_bank (bank_id, bank_name, bank_pic, 
      bank_code, bank_background, background_pictrue
      )
    values (#{bankId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, #{bankPic,jdbcType=VARCHAR}, 
      #{bankCode,jdbcType=VARCHAR}, #{bankBackground,jdbcType=VARCHAR}, #{backgroundPictrue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.msl.mybatis.entity.YpBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yp_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankPic != null">
        bank_pic,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="bankBackground != null">
        bank_background,
      </if>
      <if test="backgroundPictrue != null">
        background_pictrue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankPic != null">
        #{bankPic,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBackground != null">
        #{bankBackground,jdbcType=VARCHAR},
      </if>
      <if test="backgroundPictrue != null">
        #{backgroundPictrue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.msl.mybatis.entity.YpBankExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from yp_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_bank
    <set>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankPic != null">
        bank_pic = #{record.bankPic,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankBackground != null">
        bank_background = #{record.bankBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.backgroundPictrue != null">
        background_pictrue = #{record.backgroundPictrue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_bank
    set bank_id = #{record.bankId,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_pic = #{record.bankPic,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      bank_background = #{record.bankBackground,jdbcType=VARCHAR},
      background_pictrue = #{record.backgroundPictrue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.msl.mybatis.entity.YpBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_bank
    <set>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankPic != null">
        bank_pic = #{bankPic,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBackground != null">
        bank_background = #{bankBackground,jdbcType=VARCHAR},
      </if>
      <if test="backgroundPictrue != null">
        background_pictrue = #{backgroundPictrue,jdbcType=VARCHAR},
      </if>
    </set>
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.msl.mybatis.entity.YpBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yp_bank
    set bank_name = #{bankName,jdbcType=VARCHAR},
      bank_pic = #{bankPic,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_background = #{bankBackground,jdbcType=VARCHAR},
      background_pictrue = #{backgroundPictrue,jdbcType=VARCHAR}
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
</mapper>