package com.msl.mybatis.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class YpRiskUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public YpRiskUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdIsNull() {
            addCriterion("risk_rule_id is null");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdIsNotNull() {
            addCriterion("risk_rule_id is not null");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdEqualTo(Integer value) {
            addCriterion("risk_rule_id =", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdNotEqualTo(Integer value) {
            addCriterion("risk_rule_id <>", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdGreaterThan(Integer value) {
            addCriterion("risk_rule_id >", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("risk_rule_id >=", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdLessThan(Integer value) {
            addCriterion("risk_rule_id <", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("risk_rule_id <=", value, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdIn(List<Integer> values) {
            addCriterion("risk_rule_id in", values, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdNotIn(List<Integer> values) {
            addCriterion("risk_rule_id not in", values, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdBetween(Integer value1, Integer value2) {
            addCriterion("risk_rule_id between", value1, value2, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andRiskRuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("risk_rule_id not between", value1, value2, "riskRuleId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysIsNull() {
            addCriterion("is_always is null");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysIsNotNull() {
            addCriterion("is_always is not null");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysEqualTo(Integer value) {
            addCriterion("is_always =", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysNotEqualTo(Integer value) {
            addCriterion("is_always <>", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysGreaterThan(Integer value) {
            addCriterion("is_always >", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_always >=", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysLessThan(Integer value) {
            addCriterion("is_always <", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysLessThanOrEqualTo(Integer value) {
            addCriterion("is_always <=", value, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysIn(List<Integer> values) {
            addCriterion("is_always in", values, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysNotIn(List<Integer> values) {
            addCriterion("is_always not in", values, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysBetween(Integer value1, Integer value2) {
            addCriterion("is_always between", value1, value2, "isAlways");
            return (Criteria) this;
        }

        public Criteria andIsAlwaysNotBetween(Integer value1, Integer value2) {
            addCriterion("is_always not between", value1, value2, "isAlways");
            return (Criteria) this;
        }

        public Criteria andExpireDayIsNull() {
            addCriterion("expire_day is null");
            return (Criteria) this;
        }

        public Criteria andExpireDayIsNotNull() {
            addCriterion("expire_day is not null");
            return (Criteria) this;
        }

        public Criteria andExpireDayEqualTo(Integer value) {
            addCriterion("expire_day =", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayNotEqualTo(Integer value) {
            addCriterion("expire_day <>", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayGreaterThan(Integer value) {
            addCriterion("expire_day >", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("expire_day >=", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayLessThan(Integer value) {
            addCriterion("expire_day <", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayLessThanOrEqualTo(Integer value) {
            addCriterion("expire_day <=", value, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayIn(List<Integer> values) {
            addCriterion("expire_day in", values, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayNotIn(List<Integer> values) {
            addCriterion("expire_day not in", values, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayBetween(Integer value1, Integer value2) {
            addCriterion("expire_day between", value1, value2, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireDayNotBetween(Integer value1, Integer value2) {
            addCriterion("expire_day not between", value1, value2, "expireDay");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateIsNull() {
            addCriterion("expire_start_date is null");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateIsNotNull() {
            addCriterion("expire_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateEqualTo(Date value) {
            addCriterion("expire_start_date =", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateNotEqualTo(Date value) {
            addCriterion("expire_start_date <>", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateGreaterThan(Date value) {
            addCriterion("expire_start_date >", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateGreaterThanOrEqualTo(Date value) {
            addCriterion("expire_start_date >=", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateLessThan(Date value) {
            addCriterion("expire_start_date <", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateLessThanOrEqualTo(Date value) {
            addCriterion("expire_start_date <=", value, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateIn(List<Date> values) {
            addCriterion("expire_start_date in", values, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateNotIn(List<Date> values) {
            addCriterion("expire_start_date not in", values, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateBetween(Date value1, Date value2) {
            addCriterion("expire_start_date between", value1, value2, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andExpireStartDateNotBetween(Date value1, Date value2) {
            addCriterion("expire_start_date not between", value1, value2, "expireStartDate");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("creator like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("creator not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yp_risk_user
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yp_risk_user
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}